subdirs = 

CONFIG = RELEASE

## C global parameters
CFLAGS_BASE =  
CFLAGS_PRIVATE = -isystem ../include 
CFLAGS_CONFIG_RELEASE = -O3 -DNDEBUG
CFLAGS_CONFIG_DEBUG = -g -O0 -DDEBUG=1
CC_PKG = 
CC_DEPS =
CC_LIBS =
CC_LDFLAGS =
CC_TEST_LIBS = $(CC_LIBS) -lunitc -lrt
CC_TEST_DEPS =$(CC_DEPS) libunitc.a
CC_TEST_LDFLAGS =

## C++ global parameters
CXXFLAGS_BASE = 
CXXFLAGS_PRIVATE = -isystem ../include -Wall
CXXFLAGS_CONFIG_RELEASE = -O3 -DNDEBUG
CXXFLAGS_CONFIG_DEBUG = -g -O0 -DDEBUG=1
#CXX_PKG = igraph muparser libxml++-2.6
CXX_PKG_igraph_version = >= 0.7.1
CXX_DEPS =
CXX_LIBS = 
CXX_LDFLAGS =
CXX_TEST_LIBS = $(CXX_LIBS) -lunitc++ -lrt
CXX_TEST_DEPS = $(CXX_DEPS) libunitc++.a
CXX_TEST_LDFLAGS =

## static library packages and their sources
bincxx_package = demo streamingapp_demo demo_xmlformats graphmltoampli amplitographml duplicate_tasks graphmlfmltographmleval amplitoampli amplitoamplo amplotoampli amplotoamplo amplitocpp amplotocpp run_record amplotoschedule amplmatrixtoraw streamittographml

bincxx_demo_src = demo.cpp
bincxx_demo_export = $(bincxx_demo_embed) $(bincxx_demo_src) 
bincxx_demo_deps = libcppelib.a
bincxx_demo_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_demo_pkg = $(libcxx_cppelib_pkg)
bincxx_demo_ldflags = -L.
bincxx_demo_static = 1

bincxx_streamingapp_demo_src = streamingapp_demo.cpp
bincxx_streamingapp_demo_export = $(bincxx_streamingapp_demo_embed) $(bincxx_streamingapp_demo_src) 
bincxx_streamingapp_demo_deps = libcppelib.a
bincxx_streamingapp_demo_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_streamingapp_demo_pkg = $(libcxx_cppelib_pkg)
bincxx_streamingapp_demo_ldflags = -L.
bincxx_streamingapp_demo_static = 1

bincxx_duplicate_tasks_src =  duplicate_tasks.cpp
bincxx_duplicate_tasks_export = $(bincxx_duplicate_tasks_embed) $(bincxx_duplicate_tasks_src) 
bincxx_duplicate_tasks_deps = libcppelib.a
bincxx_duplicate_tasks_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_duplicate_tasks_pkg = $(libcxx_cppelib_pkg)
bincxx_duplicate_tasks_ldflags = -L.
bincxx_duplicate_tasks_static = 1

bincxx_graphmltoampli_src = graphmltoampli.cpp
bincxx_graphmltoampli_export = $(bincxx_graphmltoampli_embed) $(bincxx_graphmltoampli_src) 
bincxx_graphmltoampli_deps = libcppelib.a
bincxx_graphmltoampli_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_graphmltoampli_pkg = $(libcxx_cppelib_pkg)
bincxx_graphmltoampli_ldflags = -L.
bincxx_graphmltoampli_static = 1

bincxx_amplitographml_src = amplitographml.cpp
bincxx_amplitographml_export = $(bincxx_amplitographml_embed) $(bincxx_amplitographml_src) 
bincxx_amplitographml_deps = libcppelib.a
bincxx_amplitographml_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplitographml_pkg = $(libcxx_cppelib_pkg)
bincxx_amplitographml_ldflags = -L.
bincxx_amplitographml_static = 1

bincxx_graphmlfmltographmleval_src = graphmlfmltographmleval.cpp
bincxx_graphmlfmltographmleval_export = $(bincxx_graphmlfmltographmleval_embed) $(bincxx_graphmlfmltographmleval_src) 
bincxx_graphmlfmltographmleval_deps = libcppelib.a
bincxx_graphmlfmltographmleval_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_graphmlfmltographmleval_pkg = $(libcxx_cppelib_pkg)
bincxx_graphmlfmltographmleval_ldflags = -L.
bincxx_graphmlfmltographmleval_static = 1

bincxx_amplotoschedule_src = amplotoschedule.cpp
bincxx_amplotoschedule_export = $(bincxx_amplotoschedule_embed) $(bincxx_amplotoschedule_src) 
bincxx_amplotoschedule_deps = libcppelib.a
bincxx_amplotoschedule_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplotoschedule_pkg = $(libcxx_cppelib_pkg)
bincxx_amplotoschedule_ldflags = -L.
bincxx_amplotoschedule_static = 1

bincxx_demo_xmlformats_src = demo_xmlformats.cpp
bincxx_demo_xmlformats_export = $(bincxx_demo_xmlformats_embed) $(bincxx_demo_xmlformats_src) 
bincxx_demo_xmlformats_deps = libcppelib.a
bincxx_demo_xmlformats_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_demo_xmlformats_pkg = $(libcxx_cppelib_pkg)
bincxx_demo_xmlformats_ldflags = -L.
bincxx_demo_xmlformats_static = 1

bincxx_amplitoampli_src = amplitoampli.cpp
bincxx_amplitoampli_export = $(bincxx_amplitoampli_embed) $(bincxx_amplitoampli_src) 
bincxx_amplitoampli_deps = libcppelib.a
bincxx_amplitoampli_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplitoampli_pkg = $(libcxx_cppelib_pkg)
bincxx_amplitoampli_ldflags = -L.
bincxx_amplitoampli_static = 1

bincxx_amplitoamplo_src = amplitoamplo.cpp
bincxx_amplitoamplo_export = $(bincxx_amplitoamplo_embed) $(bincxx_amplitoamplo_src) 
bincxx_amplitoamplo_deps = libcppelib.a
bincxx_amplitoamplo_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplitoamplo_pkg = $(libcxx_cppelib_pkg)
bincxx_amplitoamplo_ldflags = -L.
bincxx_amplitoamplo_static = 1

bincxx_amplotoampli_src = amplotoampli.cpp
bincxx_amplotoampli_export = $(bincxx_amplotoampli_embed) $(bincxx_amplotoampli_src) 
bincxx_amplotoampli_deps = libcppelib.a
bincxx_amplotoampli_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplotoampli_pkg = $(libcxx_cppelib_pkg)
bincxx_amplotoampli_ldflags = -L.
bincxx_amplotoampli_static = 1

bincxx_amplotoamplo_src = amplotoamplo.cpp
bincxx_amplotoamplo_export = $(bincxx_amplotoamplo_embed) $(bincxx_amplotoamplo_src) 
bincxx_amplotoamplo_deps = libcppelib.a
bincxx_amplotoamplo_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplotoamplo_pkg = $(libcxx_cppelib_pkg)
bincxx_amplotoamplo_ldflags = -L.
bincxx_amplotoamplo_static = 1

bincxx_amplitocpp_src = amplitocpp.cpp
bincxx_amplitocpp_export = $(bincxx_amplitocpp_embed) $(bincxx_amplitocpp_src) 
bincxx_amplitocpp_deps = libcppelib.a
bincxx_amplitocpp_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplitocpp_pkg = $(libcxx_cppelib_pkg)
bincxx_amplitocpp_ldflags = -L.
bincxx_amplitocpp_static = 1

bincxx_amplotocpp_src = amplotocpp.cpp
bincxx_amplotocpp_export = $(bincxx_amplotocpp_embed) $(bincxx_amplotocpp_src) 
bincxx_amplotocpp_deps = libcppelib.a
bincxx_amplotocpp_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplotocpp_pkg = $(libcxx_cppelib_pkg)
bincxx_amplotocpp_ldflags = -L.
bincxx_amplotocpp_static = 1

bincxx_run_record_src = run_record.cpp
bincxx_run_record_export = $(bincxx_run_record_embed) $(bincxx_run_record_src) make_algebra.cpp
bincxx_run_record_deps = libcppelib.a
bincxx_run_record_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_run_record_pkg = $(libcxx_cppelib_pkg)
bincxx_run_record_ldflags = -L.
bincxx_run_record_static = 1

bincxx_amplmatrixtoraw_src = amplmatrixtoraw.cpp
bincxx_amplmatrixtoraw_export = $(bincxx_amplmatrixtoraw_embed) $(bincxx_amplmatrixtoraw_src)
bincxx_amplmatrixtoraw_deps = libcppelib.a
bincxx_amplmatrixtoraw_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_amplmatrixtoraw_pkg = $(libcxx_cppelib_pkg)
bincxx_amplmatrixtoraw_ldflags = -L.
bincxx_amplmatrixtoraw_static = 1

bincxx_streamittographml_src = streamittographml.cpp
bincxx_streamittographml_export = $(bincxx_streamittographml_embed) $(bincxx_streamittographml_src)
bincxx_streamittographml_deps = libcppelib.a
bincxx_streamittographml_libs = -lcppelib $(libcxx_cppelib_libs)
bincxx_streamittographml_pkg = $(libcxx_cppelib_pkg)
bincxx_streamittographml_ldflags = -L.
bincxx_streamittographml_static = 1

## static library packages and their sources
libcxx_package = unit cppelib

## In order:
## Internal classes: exception, data structures, structures and collection parsers and output base classes, container
## Parser base classes: containers and data structures
## Output base classes: containers and data structures
## Data structure classes: Scalar, Vector, Matrix and Set
## Ampl hierarchy base: data parsers and output
## Ampl input format classes: base class, data structure base class, parser and output data structure classes
## Ampl output format classes: base class, data structure base class, parser and output data structure classes
## Cpp hierarchy base: data output only
## Cpp format classes: base class, data structure base class, output data structure classes; no parser because of lack of cpp parser base class
libcxx_cppelib_src = ParseException.cpp CastException.cpp NoDecimalFloatException.cpp Record.cpp \
Data.cpp AlgebraData.cpp Algebra.cpp StreamingAppData.cpp StreamingApp.cpp \
AlgebraParser.cpp DataParser.cpp AlgebraDataParser.cpp \
AlgebraOutput.cpp DataOutput.cpp AlgebraDataOutput.cpp \
Scalar.cpp Vector.cpp Matrix.cpp Set.cpp \
AmplDataParser.cpp AmplDataOutput.cpp \
AmplInput.cpp AmplInputData.cpp AmplInputScalar.cpp AmplInputVector.cpp AmplInputSet.cpp AmplInputMatrix.cpp GraphML.cpp Schedule.cpp \
AmplOutput.cpp AmplOutputData.cpp AmplOutputScalar.cpp AmplOutputVector.cpp AmplOutputSet.cpp AmplOutputMatrix.cpp \
Task.cpp Link.cpp Taskgraph.cpp Schedule.cpp Platform.cpp \
AmplPlatform.cpp \
MakespanCalculator.cpp MakespanFormula.cpp MakespanConstant.cpp \
AmplInput.cpp AmplInputData.cpp AmplInputScalar.cpp AmplInputVector.cpp AmplInputSet.cpp AmplInputMatrix.cpp \
AmplOutput.cpp AmplOutputData.cpp AmplOutputScalar.cpp AmplOutputVector.cpp AmplOutputSet.cpp AmplOutputMatrix.cpp \
StreamNet.cpp XMLSchedule.cpp GraphML.cpp \
CppDataOutput.cpp \
Cpp.cpp CppData.cpp CppScalar.cpp CppVector.cpp CppSet.cpp CppMatrix.cpp \
RecordParser.cpp

libcxx_cppelib_export = $(libcxx_cppelib_embed) $(libcxx_cppelib_src)
libcxx_cppelib_libs = -lboost_regex -lboost_graph -lexpat -lpthread
libcxx_cppelib_ldflags = 
libcxx_cppelib_deps =
libcxx_cppelib_pkg = igraph libxml++-2.6
libcxx_cppelib_pkg_url = http://www.ida.liu.se/~nicme26
libcxx_cppelib_pkg_ld = 
libcxx_cppelib_pkg_libs = 
libcxx_cppelib_pkg_cxxflags = 
libcxx_cppelib_pkg_description = General research utility library used in PELAB
libcxx_cppelib_embed = 

libcxx_unit_src = unit_test.cpp
libcxx_unit_export = $(libcxx_unit_embed) $(libcxx_unit_src)
libcxx_unit_deps =

## test packages and their sources
testcxx_package = parser 

testcxx_parser_src = test_parser.cpp 
testcxx_parser_export = $(testcxx_parser_embed) $(testcxx_parser_src) make_algebra.cpp
testcxx_parser_deps = libcppelib.a libunit.a
testcxx_parser_libs = -lunit -lcppelib $(libcxx_cppelib_libs)
testcxx_parser_pkg = $(libcxx_cppelib_pkg)
testcxx_parser_ldflags = -L.
testcxx_parser_embed = fft_n15_1.graphml fft_n15_1_input.dat fft_n15_1_output.dat p8.dat schedule.xml crown.dat schedule.dat

