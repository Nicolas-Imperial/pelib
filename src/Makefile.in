## C global parameters
CFLAGS_BASE=-isystem ../include 
CFLAGS_RELEASE = -O3 -DNDEBUG
CFLAGS_DEBUG = -g -O0 -DDEBUG=1
CC_DEPS=
CC_LIBS =
CC_LDFLAGS = -L$(CPPELIB_SRC)/src -L.
CC_TEST_LIBS = 
CC_TEST_DEPS =$(CC_DEPS) libunitc+.a
CC_TEST_LDFLAGS = -L$(CPPELIB_SRC)/src -L.

## C++ global parameters
CXXFLAGS_BASE=-isystem ../include -isystem $(CPPELIB_SRC)/include -DLONGEST_TASK_FIRST=1 -Wall -std=c++0x
CXXFLAGS_RELEASE = -O3 -DNDEBUG
CXXFLAGS_DEBUG = -g -O0 -DDEBUG=1
CXX_LDFLAGS = -L$(CPPELIB_SRC)/src -L.
CXX_PKG = igraph muparser libxml++-2.6
CXX_DEPS=libcrown.a $(CPPELIB_SRC)/src/libcppelib.a
CXX_LIBS =-lcppelib -lboost_regex
CXX_TEST_LIBS =$(CXX_LIBS) -lunitc++ -lrt 
CXX_TEST_DEPS =$(CXX_DEPS) libunitc++.a
CXX_TEST_LDFLAGS = -L$(CPPELIB_SRC)/src -L.

## static library packages and their sources
bincxx_package = demo streamingapp_demo demo_xmlformats taskgraph2ampl_i ampl_i2taskgraph duplicate_tasks taskgraphfml2evaluated ampl_i2i ampl_i2o ampl_o2i ampl_o2o ampl_i2cpp ampl_o2cpp run_record ampl_o2schedule

bincxx_demo_src = demo.cpp
bincxx_demo_export = $(bincxx_demo_src) 
bincxx_demo_deps = libcppelib.a
bincxx_demo_libs = -lboost_regex -lboost_graph -lexpat 
bincxx_demo_ldflags =

bincxx_streamingapp_demo_src = streamingapp_demo.cpp
bincxx_streamingapp_demo_export = $(bincxx_streamingapp_demo_src) 
bincxx_streamingapp_demo_deps = libcppelib.a
bincxx_streamingapp_demo_libs = -lboost_regex -lboost_graph -lexpat 
bincxx_streamingapp_demo_ldflags =

bincxx_duplicate_tasks_src =  duplicate_tasks.cpp
bincxx_duplicate_tasks_export = $(duplicate_tasks_src) 
bincxx_duplicate_tasks_deps = libcppelib.a
bincxx_duplicate_tasks_libs = -lboost_regex -lboost_graph -lexpat
bincxx_duplicate_tasks_ldflags =

bincxx_taskgraph2ampl_i_src = taskgraph2ampl_i.cpp
bincxx_taskgraph2ampl_i_export = $(bincxx_taskgraph2ampl_src) 
bincxx_taskgraph2ampl_i_deps = libcppelib.a
bincxx_taskgraph2ampl_i_libs = -lboost_regex -lboost_graph -lexpat
bincxx_taskgraph2ampl_i_ldflags =

bincxx_ampl_i2taskgraph_src = ampl_i2taskgraph.cpp
bincxx_ampl_i2taskgraph_export = $(bincxx_ampl2taskgraph_src) 
bincxx_ampl_i2taskgraph_deps = libcppelib.a
bincxx_ampl_i2taskgraph_libs = -lboost_regex -lboost_graph -lexpat
bincxx_ampl_i2taskgraph_ldflags =

bincxx_taskgraphfml2evaluated_src = taskgraphfml2evaluated.cpp
bincxx_taskgraphfml2evaluated_export = $(bincxx_taskgraphfml2evaluated_src) 
bincxx_taskgraphfml2evaluated_deps = libcppelib.a
bincxx_taskgraphfml2evaluated_libs = -lboost_regex -lboost_graph -lexpat
bincxx_taskgraphfml2evaluated_ldflags =

bincxx_ampl_o2schedule_src = ampl_o2schedule.cpp
bincxx_ampl_o2schedule_export = $(bincxx_taskgraphfml2evaluated_src) 
bincxx_ampl_o2schedule_deps = libcppelib.a
bincxx_ampl_o2schedule_libs = -lboost_regex -lboost_graph -lexpat
bincxx_ampl_o2schedule_ldflags =

bincxx_demo_xmlformats_src = demo_xmlformats.cpp
bincxx_demo_xmlformats_export = $(bincxx_demo_xmlformats_src) 
bincxx_demo_xmlformats_deps = libcppelib.a
bincxx_demo_xmlformats_libs = -lboost_regex -lboost_graph -lexpat 
bincxx_demo_xmlformats_ldflags =

bincxx_ampl_i2i_src = ampl_i2i.cpp
bincxx_ampl_i2i_export = $(bincxx_ampl_i2i_src) 
bincxx_ampl_i2i_deps = libcppelib.a
bincxx_ampl_i2i_libs = -lboost_regex -lboost_graph -lexpat 
bincxx_ampl_i2i_ldflags =

bincxx_ampl_i2o_src = ampl_i2o.cpp
bincxx_ampl_i2o_export = $(bincxx_ampl_i2o_src) 
bincxx_ampl_i2o_deps = libcppelib.a
bincxx_ampl_i2o_libs = -lboost_regex -lboost_graph -lexpat 
bincxx_ampl_i2o_ldflags =

bincxx_ampl_o2i_src = ampl_o2i.cpp
bincxx_ampl_o2i_export = $(bincxx_ampl_o2i_src) 
bincxx_ampl_o2i_deps = libcppelib.a
bincxx_ampl_o2i_libs = -lboost_regex -lboost_graph -lexpat 
bincxx_ampl_o2i_ldflags =

bincxx_ampl_o2o_src = ampl_o2o.cpp
bincxx_ampl_o2o_export = $(bincxx_ampl_o2o_src) 
bincxx_ampl_o2o_deps = libcppelib.a
bincxx_ampl_o2o_libs = -lboost_regex -lboost_graph -lexpat
bincxx_ampl_o2o_ldflags = 

bincxx_ampl_i2cpp_src = ampl_i2cpp.cpp
bincxx_ampl_i2cpp_export = $(bincxx_ampl_i2cpp_src) 
bincxx_ampl_i2cpp_deps = libcppelib.a
bincxx_ampl_i2cpp_libs = -lboost_regex -lboost_graph -lexpat
bincxx_ampl_i2cpp_ldflags = 

bincxx_ampl_o2cpp_src = ampl_o2cpp.cpp
bincxx_ampl_o2cpp_export = $(bincxx_ampl_o2cpp_src) 
bincxx_ampl_o2cpp_deps = libcppelib.a
bincxx_ampl_o2cpp_libs = -lboost_regex -lboost_graph -lexpat
bincxx_ampl_o2cpp_ldflags = 

bincxx_run_record_src = run_record.cpp
bincxx_run_record_export = $(bincxx_run_record_src) make_algebra.cpp
bincxx_run_record_deps = libcppelib.a
bincxx_run_record_libs = -lboost_regex -lboost_graph -lexpat
bincxx_run_record_ldflags = 

## static library packages and their sources
libcxx_package = cppelib unit

## In order:
## Internal classes: exception, data structures, structures and collection parsers and output base classes, container
## Parser base classes: containers and data structures
## Output base classes: containers and data structures
## Data structure classes: Scalar, Vector, Matrix and Set
## Ampl hierarchy base: data parsers and output
## Ampl input format classes: base class, data structure base class, parser and output data structure classes
## Ampl output format classes: base class, data structure base class, parser and output data structure classes
## Cpp hierarchy base: data output only
## Cpp format classes: base class, data structure base class, output data structure classes; no parser because of lack of cpp parser base class
libcxx_cppelib_src = \
ParseException.cpp CastException.cpp NoDecimalFloatException.cpp Record.cpp \
Data.cpp AlgebraData.cpp Algebra.cpp StreamingAppData.cpp StreamingApp.cpp \
AlgebraParser.cpp DataParser.cpp AlgebraDataParser.cpp \
AlgebraOutput.cpp DataOutput.cpp AlgebraDataOutput.cpp \
Scalar.cpp Vector.cpp Matrix.cpp Set.cpp \
AmplDataParser.cpp AmplDataOutput.cpp \
AmplInput.cpp AmplInputData.cpp AmplInputScalar.cpp AmplInputVector.cpp AmplInputSet.cpp AmplInputMatrix.cpp GraphML.cpp TaskgraphRecord.cpp Schedule.cpp \
AmplOutput.cpp AmplOutputData.cpp AmplOutputScalar.cpp AmplOutputVector.cpp AmplOutputSet.cpp AmplOutputMatrix.cpp \
Task.cpp Link.cpp Taskgraph.cpp Schedule.cpp Architecture.cpp \
AmplArchitecture.cpp \
MakespanCalculator.cpp MakespanSynthetic.cpp MakespanConstant.cpp MakespanFFT.cpp MakespanPreduce.cpp MakespanMergesort.cpp \
AmplInput.cpp AmplInputData.cpp AmplInputScalar.cpp AmplInputVector.cpp AmplInputSet.cpp AmplInputMatrix.cpp \
AmplOutput.cpp AmplOutputData.cpp AmplOutputScalar.cpp AmplOutputVector.cpp AmplOutputSet.cpp AmplOutputMatrix.cpp \
StreamNet.cpp XMLSchedule.cpp GraphML.cpp \
CppDataOutput.cpp \
Cpp.cpp CppData.cpp CppScalar.cpp CppVector.cpp CppSet.cpp CppMatrix.cpp \
RecordParser.cpp

libcxx_cppelib_export = $(lib_cppelib_src)
libcxx_cppelib_deps =
libcxx_cppelib_pkg_ld = test_ldflags
libcxx_cppelib_pkg_libs = test_libs
libcxx_cppelib_pkg_cxxflags = test_cxxflags
libcxx_cppelib_pkg_description = test_description

libcxx_unit_src = unit_test.cpp
libcxx_unit_export = $(libcxx_unit_src)
libcxx_unit_deps =

## test packages and their sources
testcxx_package = parser 

testcxx_parser_src = testcxx_parser.cpp 
testcxx_parser_export = $(testcxx_parser_src) uni_test.dat 
testcxx_parser_deps = libcppelib.a libunit.a
testcxx_parser_pkg = igraph
testcxx_parser_libs = -lboost_regex -lrt
testcxx_parser_ldflags = 

#FIRST=test

test:
	@echo Begin test
	@echo all_src=\"$(all_src)\"
	@echo End of test
	@/bin/false
	@echo cc_pkgconfig=\"$(cc_pkgconfig)\"
	@echo cxx_pkgconfig=\"$(cxx_pkgconfig)\"
	@echo libcc_package=$(libcc_package)
	@echo libcxx_package=$(libcxx_package)
	@echo $(foreach var,$(libcc_package),$(var))
	@echo $(foreach var,$(libcxx_package),$(var))
	@echo $(foreach var,$(libcc_package),$(patsubst %,%.pc,$(var)))
	@echo $(foreach var,$(libcxx_package),$(patsubst %,%.pc,$(var)))
	@echo End of test
	@/bin/false
