# Copyright 2015 Nicolas Melot
#
# This file is part of pelib.
#
# pelib is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# pelib is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with pelib. If not, see <http://www.gnu.org/licenses/>.
#

attach = 

subdirs = 

## C global parameters
CFLAGS_BASE =  
CFLAGS_PRIVATE = -I../include 
CFLAGS_CONFIG_RELEASE = -O3 -DNDEBUG
CFLAGS_CONFIG_DEBUG = -g -O0 -DDEBUG=1
CFLAGS_SHARED = 
CC_PKG = 
CC_DEPS =
CC_LIBS = 
CC_LDFLAGS =
CC_TEST_PKG = unit
CC_TEST_LIBS = $(CC_LIBS) -lrt
CC_TEST_DEPS =$(CC_DEPS)
CC_TEST_LDFLAGS =

## C++ global parameters
CXXFLAGS_BASE = 
CXXFLAGS_PRIVATE = -I../include -Wall
CXXFLAGS_CONFIG_RELEASE = -O3 -DNDEBUG
CXXFLAGS_CONFIG_DEBUG = -g -O0 -DDEBUG=1
CXXFLAGS_SHARED = 
CXX_PKG = 
CXX_PKG_igraph_version = >= 0.7.1
CXX_DEPS =
CXX_LIBS = 
CXX_LDFLAGS =
CXX_TEST_PKG = unit
CXX_TEST_LIBS = $(CXX_LIBS) -lrt
CXX_TEST_DEPS = $(CXX_DEPS)
CXX_TEST_LDFLAGS =

## Enable shared and static libraries
CORE++_STATIC = 0
CORE++_SHARED = 1
corepp_extra = 

CORE_STATIC = 1
CORE_SHARED = 1
core_extra = 

## Packages source files
corepp_src = PelibException.cpp ParseException.cpp CastException.cpp NoDecimalFloatException.cpp \
Data.cpp Record.cpp \
Parser.cpp Output.cpp \
DataParser.cpp DataOutput.cpp \
RecordParser.cpp \
argument_parsing.cpp dl.cpp \
 
core_src = sort.c complex.c float.c char.c integer.c string.c const_string.c string_integer.c monitor.c size_t.c pelib_string.c malloc.c

## executables
bincxx_project = pelib
bincxx_package = $(if $(filter 1,$(CORE++_SHARED) $(CORE++_STATIC)),$(bincxx_project))

bincxx_pelib_src = pelib.cpp
bin_pelib_export = $(bincxx_pelib_embed) $(bincxx_pelib_src) 
bin_pelib_deps = libpelib-core++.so
bin_pelib_libs = -lpelib-core++ $(shared_pelib-core++_libs)
bin_pelib_pkg = $(shared_pelib-core++_pkg)
bin_pelib_ldflags = -L.
bin_pelib_static = 0

## dynamic library packages and their sources
corepp = pelib-core++
sharedcxx_package = $(if $(filter 1,$(CORE++_SHARED)),$(corepp))
sharedcc_package = $(if $(filter 1,$(CORE_SHARED)),pelib-core)

sharedcxx_pelib-core++_src = $(corepp_src)
sharedcc_pelib-core++_src = time.c $(if $(filter core,$(corepp_extra)),$(core_src))
shared_pelib-core++_export = $(sharedcxx_pelib-core++_embed) $(sharedcxx_pelib-core++_src) $(sharedcc_pelib-core++_src) time.c
shared_pelib-core++_libs = -lboost_regex -lboost_graph -lexpat -ldl -lm $(asan_libs)
shared_pelib-core++_ldflags = -pthread
shared_pelib-core++_cxxflags = -fPIC -std=c++11
shared_pelib-core++_deps =
shared_pelib-core++_pkg = 
shared_pelib-core++_pkg_url = http://www.ida.liu.se/~nicme26
shared_pelib-core++_pkg_ld = 
shared_pelib-core++_pkg_libs = $(shared_pelib-core++_libs)
shared_pelib-core++_pkg_igraph_version = >= 0.7.1
shared_pelib_pkg_libxml++-2.6_version = >= 2.20
shared_pelib_pkg_cairomm-1.0_version = >= 1.8.0
shared_pelib-core++_pkg_requires = 
shared_pelib-core++_pkg_requires_igraph_version = >= 0.7.1
shared_pelib-core++_pkg_description = General research utility library used in PELAB
shared_pelib-core++_embed = 

## static library packages and their sources
lib_package = $(if $(filter 1,$(CORE++_STATIC)),$(corepp)) $(if $(filter 1,$(CORE_STATIC)), pelib-core)

libcxx_pelib-core_src =
libcc_pelib-core_src = $(core_src) time.c
lib_pelib-core_libs = -lboost_regex -lboost_graph -lexpat $(asan_libs)
lib_pelib-core_export = $(lib_pelib-core_embed) $(libcxx_pelib-core_src) $(libcc_pelib-core_src) time.c
lib_pelib-core_cflags = $(asan_cflags)
lib_pelib-core_ldflags = -pthread
lib_pelib-core_deps =
lib_pelib-core_pkg = #igraph libxml++-2.6 cairomm-1.0
lib_pelib-core_pkg_url = http://www.ida.liu.se/~nicme26
lib_pelib-core_pkg_ld =
lib_pelib-core_pkg_libs = -lboost_regex -lboost_graph -lm
lib_pelib-core_pkg_igraph_version = >= 0.7.1
lib_pelib-core_pkg_description = General research utility library used in PELAB
lib_pelib-core_embed =

sharedcxx_pelib-core_src =
sharedcc_pelib-core_src = $(core_src) time.c
shared_pelib-core_libs = -lboost_regex -lboost_graph -lexpat $(asan_libs)
shared_pelib-core_export = $(shared_pelib-core_embed) $(sharedcxx_pelib-core_src) $(sharedcc_pelib-core_src) time.c
shared_pelib-core_cxxflags =
shared_pelib-core_ldflags = -pthread
shared_pelib-core_deps =
shared_pelib-core_pkg = 
shared_pelib-core_pkg_url = http://www.ida.liu.se/~nicme26
shared_pelib-core_pkg_ld =
shared_pelib-core_pkg_libs = -lboost_regex -lboost_graph -lm
shared_pelib-core_pkg_igraph_version = >= 0.7.1
shared_pelib-core_cflags = -fPIC $(asan_cflags)
shared_pelib-core_pkg_description = General research utility sharedrary used in PELAB
shared_pelib-core_embed =

## test packages and their sources 
testcxx_package = 

testcc_project = sort-test array-test fifo-test stack-test fifo_array-test set-test map-test
testcc_package = $(if $(filter 1,$(CORE_SHARED))$(filter 1,$(CORE_STATIC)),$(testcc_project))

testcc_sort-test_src = test_sort.c
test_sort-test_export = $(testcc_sort-test_src)
test_sort-test_deps =
test_sort-test_pkg = pelib-core
test_sort-test_libs = -lm
test_sort-test_ldflags = -L.
test_sort-test_static = 0

testcc_mapping-test_src = test_mapping.c
test_mapping-test_export = $(testcc_mapping-test_src)
test_mapping-test_deps =
test_mapping-test_pkg = pelib-core
test_mapping-test_libs =
test_mapping-test_ldflags = -L.
test_mapping-test_static = 0

testcc_array-test_src = test_array.c
test_array-test_export = $(testcc_array-test_src)
test_array-test_deps =
test_array-test_pkg = pelib-core
test_array-test_libs =
test_array-test_ldflags = -L.
test_array-test_static = 0

testcc_fifo-test_src = test_fifo.c
test_fifo-test_export = $(testcc_fifo-test_src)
test_fifo-test_deps =
test_fifo-test_pkg = pelib-core
test_fifo-test_libs =
test_fifo-test_ldflags = -L.
test_fifo-test_static = 0

testcc_stack-test_src = test_stack.c
test_stack-test_export = $(testcc_stack-test_src)
test_stack-test_deps =
test_stack-test_pkg = pelib-core
test_stack-test_libs =
test_stack-test_ldflags = -L. -pthread
test_stack-test_static = 0

testcc_fifo_array-test_src = test_fifo_array.c
test_fifo_array-test_export = $(testcc_fifo_array-test_src)
test_fifo_array-test_deps =
test_fifo_array-test_pkg = pelib-core
test_fifo_array-test_libs =
test_fifo_array-test_ldflags = -L.
test_fifo_array-test_static = 0

testcc_set-test_src = test_set.c
test_set-test_export = $(testcc_set-test_src)
test_set-test_deps = libpelib-core.so.$(version).$(minor).$(release)
test_set-test_pkg = pelib-core
test_set-test_libs =
test_set-test_ldflags = -L.
test_set-test_static = 0

testcc_map-test_src = test_map.c
test_map-test_export = $(testcc_map-test_src)
test_map-test_deps = libpelib-core.so.$(version).$(minor).$(release)
test_map-test_pkg = pelib-core
test_map-test_libs =
test_map-test_ldflags = -L.
test_map-test_static = 0

post-install: do-post-install dist

do-post-install:

## Uncomment this to run target "first" before any target explicetly called
#FIRST = first

first:
	@# Display some basic variable content here and call "make all"
	@echo $(embed_object)
	@echo $(call embed,$(sharedcxx_package),shared)
	@echo $(call embed,$(call suffixin,pelib,$(sharedcxx_package)),shared)
	@echo $(patsubst %.so.$(version).$(minor).$(release),%,libpelib.so.3.0.0)
	@echo $(call embed,$(call suffixin,$(patsubst %.so.$(version).$(minor).$(release),%,libpelib.so.3.0.0),$(sharedcxx_package)),shared)
	@/bin/false
